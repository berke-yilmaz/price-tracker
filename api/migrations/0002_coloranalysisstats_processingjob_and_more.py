# Generated by Django 4.2.7 on 2025-06-09 20:42

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ColorAnalysisStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_category', models.CharField(choices=[('red', 'Kırmızı'), ('orange', 'Turuncu'), ('yellow', 'Sarı'), ('green', 'Yeşil'), ('blue', 'Mavi'), ('purple', 'Mor'), ('white', 'Beyaz'), ('black', 'Siyah'), ('brown', 'Kahverengi'), ('pink', 'Pembe'), ('unknown', 'Belirsiz')], max_length=20)),
                ('total_products', models.IntegerField(default=0)),
                ('avg_confidence', models.FloatField(default=0.0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('avg_processing_time', models.FloatField(default=0.0, help_text='Ortalama işleme süresi (saniye)')),
                ('success_rate', models.FloatField(default=0.0, help_text='Başarı oranı (0-1 arası)')),
            ],
            options={
                'verbose_name': 'Color Analysis Statistics',
                'verbose_name_plural': 'Color Analysis Statistics',
            },
        ),
        migrations.CreateModel(
            name='ProcessingJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_type', models.CharField(choices=[('color_analysis', 'Renk Analizi'), ('visual_features', 'Görsel Özellik Çıkarma'), ('text_embedding', 'Metin Embedding'), ('background_removal', 'Arka Plan Kaldırma')], max_length=20)),
                ('status', models.CharField(choices=[('queued', 'Sırada'), ('running', 'Çalışıyor'), ('completed', 'Tamamlandı'), ('failed', 'Başarısız'), ('cancelled', 'İptal Edildi')], default='queued', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('result_data', models.JSONField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('priority', models.IntegerField(default=0, help_text='Yüksek sayı = yüksek öncelik')),
                ('retry_count', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
            ],
            options={
                'ordering': ['-priority', 'created_at'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='color_aware_text_embedding',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, help_text='Renk bilgisi ile zenginleştirilmiş metin embedding', null=True, size=None),
        ),
        migrations.AddField(
            model_name='product',
            name='color_category',
            field=models.CharField(choices=[('red', 'Kırmızı'), ('orange', 'Turuncu'), ('yellow', 'Sarı'), ('green', 'Yeşil'), ('blue', 'Mavi'), ('purple', 'Mor'), ('white', 'Beyaz'), ('black', 'Siyah'), ('brown', 'Kahverengi'), ('pink', 'Pembe'), ('unknown', 'Belirsiz')], db_index=True, default='unknown', help_text='Ürünün dominant renk kategorisi', max_length=20),
        ),
        migrations.AddField(
            model_name='product',
            name='color_confidence',
            field=models.FloatField(default=0.0, help_text='Renk kategorizasyonunun güven skoru (0-1 arası)'),
        ),
        migrations.AddField(
            model_name='product',
            name='dominant_colors',
            field=django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=3), blank=True, help_text='Ürünün dominant renkleri (RGB formatında)', null=True, size=None),
        ),
        migrations.AddField(
            model_name='product',
            name='processed_at',
            field=models.DateTimeField(blank=True, help_text='Görsel işlemenin tamamlandığı zaman', null=True),
        ),
        migrations.AddField(
            model_name='product',
            name='processing_error',
            field=models.TextField(blank=True, help_text='İşleme sırasında oluşan hata mesajı', null=True),
        ),
        migrations.AddField(
            model_name='product',
            name='processing_status',
            field=models.CharField(choices=[('pending', 'Beklemede'), ('processing', 'İşleniyor'), ('completed', 'Tamamlandı'), ('failed', 'Başarısız')], default='pending', help_text='Görsel işleme durumu', max_length=20),
        ),
        migrations.AlterField(
            model_name='product',
            name='text_embedding',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, help_text='Metin embedding vektörü', null=True, size=None),
        ),
        migrations.AlterField(
            model_name='product',
            name='visual_embedding',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, help_text='ResNet50 ile çıkarılan görsel özellik vektörü (2048 boyut)', null=True, size=None),
        ),
        migrations.AddIndex(
            model_name='price',
            index=models.Index(fields=['product', 'date'], name='api_price_product_0ba713_idx'),
        ),
        migrations.AddIndex(
            model_name='price',
            index=models.Index(fields=['store', 'date'], name='api_price_store_i_f309e9_idx'),
        ),
        migrations.AddIndex(
            model_name='price',
            index=models.Index(fields=['created_at'], name='api_price_created_61f5b3_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['color_category'], name='api_product_color_c_6399ef_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['processing_status'], name='api_product_process_98a308_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['brand', 'color_category'], name='api_product_brand_984deb_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'color_category'], name='api_product_categor_9001e8_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_at'], name='api_product_created_a91d70_idx'),
        ),
        migrations.AddField(
            model_name='processingjob',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_jobs', to='api.product'),
        ),
        migrations.AlterUniqueTogether(
            name='coloranalysisstats',
            unique_together={('color_category',)},
        ),
        migrations.AddIndex(
            model_name='processingjob',
            index=models.Index(fields=['status', 'priority'], name='api_process_status_194853_idx'),
        ),
        migrations.AddIndex(
            model_name='processingjob',
            index=models.Index(fields=['product', 'job_type'], name='api_process_product_146903_idx'),
        ),
        migrations.AddIndex(
            model_name='processingjob',
            index=models.Index(fields=['created_at'], name='api_process_created_03619f_idx'),
        ),
    ]
